{"dependencies":[{"name":"/usr/local/google/home/nsthorat/deeplearnjs-clients/float16/tfjs-core/test/package.json","includedInParent":true,"mtime":1528810356568},{"name":"/usr/local/google/home/nsthorat/deeplearnjs-clients/float16/tfjs-core/test/.babelrc","includedInParent":true,"mtime":1525096773813},{"name":"/usr/local/google/home/nsthorat/deeplearnjs-clients/float16/tfjs-core/tsconfig.json","includedInParent":true,"mtime":1528810356568},{"name":"../environment","loc":{"line":13,"column":28}},{"name":"../globals","loc":{"line":14,"column":24}},{"name":"../ops/ops","loc":{"line":15,"column":20}},{"name":"../serialization","loc":{"line":16,"column":30}},{"name":"./optimizer","loc":{"line":17,"column":26}}],"generated":{"js":"\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = require(\"../environment\");\nvar globals_1 = require(\"../globals\");\nvar ops_1 = require(\"../ops/ops\");\nvar serialization_1 = require(\"../serialization\");\nvar optimizer_1 = require(\"./optimizer\");\nvar RMSPropOptimizer = (function (_super) {\n    __extends(RMSPropOptimizer, _super);\n    function RMSPropOptimizer(learningRate, decay, momentum, epsilon, centered) {\n        if (decay === void 0) { decay = 0.9; }\n        if (momentum === void 0) { momentum = 0.0; }\n        if (epsilon === void 0) { epsilon = 1e-8; }\n        if (centered === void 0) { centered = false; }\n        var _this = _super.call(this) || this;\n        _this.learningRate = learningRate;\n        _this.decay = decay;\n        _this.momentum = momentum;\n        _this.epsilon = epsilon;\n        _this.accumulatedMeanSquares = {};\n        _this.accumulatedMeanGrads = {};\n        _this.accumulatedMoments = {};\n        _this.c = globals_1.keep(ops_1.scalar(learningRate));\n        _this.epsilonScalar = globals_1.keep(ops_1.scalar(epsilon));\n        _this.decayScalar = globals_1.keep(ops_1.scalar(decay));\n        _this.momentumScalar = globals_1.keep(ops_1.scalar(momentum));\n        _this.oneMinusDecay = globals_1.keep(ops_1.scalar(1 - decay));\n        _this.centered = centered;\n        return _this;\n    }\n    RMSPropOptimizer.prototype.applyGradients = function (variableGradients) {\n        var _this = this;\n        var _loop_1 = function (variableName) {\n            var value = environment_1.ENV.engine.registeredVariables[variableName];\n            if (this_1.accumulatedMeanSquares[variableName] == null) {\n                var trainable_1 = false;\n                globals_1.tidy(function () {\n                    _this.accumulatedMeanSquares[variableName] =\n                        ops_1.zerosLike(value).variable(trainable_1);\n                });\n            }\n            if (this_1.accumulatedMeanGrads[variableName] == null && this_1.centered) {\n                var trainable_2 = false;\n                globals_1.tidy(function () {\n                    _this.accumulatedMeanGrads[variableName] =\n                        ops_1.zerosLike(value).variable(trainable_2);\n                });\n            }\n            if (this_1.accumulatedMoments[variableName] == null) {\n                var trainable_3 = false;\n                globals_1.tidy(function () {\n                    _this.accumulatedMoments[variableName] =\n                        ops_1.zerosLike(value).variable(trainable_3);\n                });\n            }\n            var accumulatedMeanSquare = this_1.accumulatedMeanSquares[variableName];\n            var accumulatedMeanGrad = this_1.accumulatedMeanGrads[variableName];\n            var accumulatedMoments = this_1.accumulatedMoments[variableName];\n            var gradient = variableGradients[variableName];\n            globals_1.tidy(function () {\n                var newAccumulatedMeanSquare = _this.decayScalar.mul(accumulatedMeanSquare)\n                    .add(_this.oneMinusDecay.mul(gradient.square()));\n                if (_this.centered) {\n                    var newAccumulatedMeanGrad = _this.decayScalar.mul(accumulatedMeanGrad)\n                        .add(_this.oneMinusDecay.mul(gradient));\n                    var newAccumulatedMoments = _this.momentumScalar.mul(accumulatedMoments)\n                        .add(_this.c.mul(gradient).div(newAccumulatedMeanSquare\n                        .sub(newAccumulatedMeanGrad.square().add(_this.epsilonScalar))\n                        .sqrt()));\n                    _this.accumulatedMeanSquares[variableName].assign(newAccumulatedMeanSquare);\n                    _this.accumulatedMeanGrads[variableName].assign(newAccumulatedMeanGrad);\n                    _this.accumulatedMoments[variableName].assign(newAccumulatedMoments);\n                    var newValue = value.sub(newAccumulatedMoments);\n                    value.assign(newValue);\n                }\n                else {\n                    var newAccumulatedMeanSquare_1 = _this.decayScalar.mul(accumulatedMeanSquare)\n                        .add(_this.oneMinusDecay.mul(gradient.square()));\n                    var newAccumulatedMoments = _this.momentumScalar.mul(accumulatedMoments)\n                        .add(_this.c.mul(gradient).div(newAccumulatedMeanSquare_1.add(_this.epsilonScalar).sqrt()));\n                    _this.accumulatedMeanSquares[variableName].assign(newAccumulatedMeanSquare_1);\n                    _this.accumulatedMoments[variableName].assign(newAccumulatedMoments);\n                    var newValue = value.sub(newAccumulatedMoments);\n                    value.assign(newValue);\n                }\n            });\n        };\n        var this_1 = this;\n        for (var variableName in variableGradients) {\n            _loop_1(variableName);\n        }\n    };\n    RMSPropOptimizer.prototype.dispose = function () {\n        var _this = this;\n        this.c.dispose();\n        this.epsilonScalar.dispose();\n        this.decayScalar.dispose();\n        this.momentumScalar.dispose();\n        this.oneMinusDecay.dispose();\n        if (this.accumulatedMeanSquares != null) {\n            Object.keys(this.accumulatedMeanSquares)\n                .forEach(function (name) { return _this.accumulatedMeanSquares[name].dispose(); });\n        }\n        if (this.accumulatedMeanGrads != null && this.centered) {\n            Object.keys(this.accumulatedMeanGrads)\n                .forEach(function (name) { return _this.accumulatedMeanGrads[name].dispose(); });\n        }\n        if (this.accumulatedMoments != null) {\n            Object.keys(this.accumulatedMoments)\n                .forEach(function (name) { return _this.accumulatedMoments[name].dispose(); });\n        }\n    };\n    RMSPropOptimizer.prototype.getConfig = function () {\n        return {\n            learningRate: this.learningRate,\n            decay: this.decay,\n            momentum: this.momentum,\n            epsilon: this.epsilon,\n            centered: this.centered\n        };\n    };\n    RMSPropOptimizer.fromConfig = function (cls, config) {\n        return new cls(config.learningRate, config.decay, config.momentum, config.epsilon, config.centered);\n    };\n    RMSPropOptimizer.className = 'RMSPropOptimizer';\n    return RMSPropOptimizer;\n}(optimizer_1.Optimizer));\nexports.RMSPropOptimizer = RMSPropOptimizer;\nserialization_1.SerializationMap.register(RMSPropOptimizer);\n","map":{"version":3,"file":"rmsprop_optimizer.js","sourceRoot":"","sources":["../src/optimizers/rmsprop_optimizer.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENV} from '../environment';\nimport {keep, tidy} from '../globals';\nimport {scalar, zerosLike} from '../ops/ops';\n// tslint:disable-next-line:max-line-length\nimport {ConfigDict, Serializable, SerializableConstructor, SerializationMap} from '../serialization';\nimport {Scalar} from '../tensor';\nimport {NamedVariableMap} from '../types';\n\nimport {Optimizer} from './optimizer';\n\n/** @doclink Optimizer */\nexport class RMSPropOptimizer extends Optimizer {\n  static className = 'RMSPropOptimizer';\n  private c: Scalar;\n  private epsilonScalar: Scalar;\n  private decayScalar: Scalar;\n  private momentumScalar: Scalar;\n  private oneMinusDecay: Scalar;\n  private centered: boolean;\n\n  private accumulatedMeanSquares: NamedVariableMap = {};\n  private accumulatedMeanGrads: NamedVariableMap = {};\n  private accumulatedMoments: NamedVariableMap = {};\n\n  constructor(\n      protected learningRate: number, protected decay = 0.9,\n      protected momentum = 0.0, protected epsilon = 1e-8, centered = false) {\n    super();\n\n    this.c = keep(scalar(learningRate));\n    this.epsilonScalar = keep(scalar(epsilon));\n    this.decayScalar = keep(scalar(decay));\n    this.momentumScalar = keep(scalar(momentum));\n    this.oneMinusDecay = keep(scalar(1 - decay));\n    this.centered = centered;\n  }\n\n  applyGradients(variableGradients: NamedVariableMap) {\n    for (const variableName in variableGradients) {\n      const value = ENV.engine.registeredVariables[variableName];\n      if (this.accumulatedMeanSquares[variableName] == null) {\n        const trainable = false;\n        tidy(() => {\n          this.accumulatedMeanSquares[variableName] =\n              zerosLike(value).variable(trainable);\n        });\n      }\n      if (this.accumulatedMeanGrads[variableName] == null && this.centered) {\n        const trainable = false;\n        tidy(() => {\n          this.accumulatedMeanGrads[variableName] =\n              zerosLike(value).variable(trainable);\n        });\n      }\n      if (this.accumulatedMoments[variableName] == null) {\n        const trainable = false;\n        tidy(() => {\n          this.accumulatedMoments[variableName] =\n              zerosLike(value).variable(trainable);\n        });\n      }\n\n      const accumulatedMeanSquare = this.accumulatedMeanSquares[variableName];\n      const accumulatedMeanGrad = this.accumulatedMeanGrads[variableName];\n      const accumulatedMoments = this.accumulatedMoments[variableName];\n      const gradient = variableGradients[variableName];\n\n      tidy(() => {\n        const newAccumulatedMeanSquare =\n            this.decayScalar.mul(accumulatedMeanSquare)\n                .add(this.oneMinusDecay.mul(gradient.square()));\n\n        if (this.centered) {\n          // Centered gradient\n          const newAccumulatedMeanGrad =\n              this.decayScalar.mul(accumulatedMeanGrad)\n                  .add(this.oneMinusDecay.mul(gradient));\n\n          const newAccumulatedMoments =\n              this.momentumScalar.mul(accumulatedMoments)\n                  .add(this.c.mul(gradient).div(\n                      newAccumulatedMeanSquare\n                          .sub(newAccumulatedMeanGrad.square().add(\n                              this.epsilonScalar))\n                          .sqrt()));\n\n          this.accumulatedMeanSquares[variableName].assign(\n              newAccumulatedMeanSquare);\n          this.accumulatedMeanGrads[variableName].assign(\n              newAccumulatedMeanGrad);\n          this.accumulatedMoments[variableName].assign(newAccumulatedMoments);\n\n          const newValue = value.sub(newAccumulatedMoments);\n          value.assign(newValue);\n        } else {\n          // Plain gradient\n          const newAccumulatedMeanSquare =\n              this.decayScalar.mul(accumulatedMeanSquare)\n                  .add(this.oneMinusDecay.mul(gradient.square()));\n\n          const newAccumulatedMoments =\n              this.momentumScalar.mul(accumulatedMoments)\n                  .add(this.c.mul(gradient).div(\n                      newAccumulatedMeanSquare.add(this.epsilonScalar).sqrt()));\n\n          this.accumulatedMeanSquares[variableName].assign(\n              newAccumulatedMeanSquare);\n          this.accumulatedMoments[variableName].assign(newAccumulatedMoments);\n\n          const newValue = value.sub(newAccumulatedMoments);\n          value.assign(newValue);\n        }\n      });\n    }\n  }\n\n  dispose() {\n    this.c.dispose();\n    this.epsilonScalar.dispose();\n    this.decayScalar.dispose();\n    this.momentumScalar.dispose();\n    this.oneMinusDecay.dispose();\n    if (this.accumulatedMeanSquares != null) {\n      Object.keys(this.accumulatedMeanSquares)\n          .forEach(name => this.accumulatedMeanSquares[name].dispose());\n    }\n    if (this.accumulatedMeanGrads != null && this.centered) {\n      Object.keys(this.accumulatedMeanGrads)\n          .forEach(name => this.accumulatedMeanGrads[name].dispose());\n    }\n    if (this.accumulatedMoments != null) {\n      Object.keys(this.accumulatedMoments)\n          .forEach(name => this.accumulatedMoments[name].dispose());\n    }\n  }\n\n  getConfig(): ConfigDict {\n    return {\n      learningRate: this.learningRate,\n      decay: this.decay,\n      momentum: this.momentum,\n      epsilon: this.epsilon,\n      centered: this.centered\n    };\n  }\n  static fromConfig<T extends Serializable>(\n      cls: SerializableConstructor<T>, config: ConfigDict): T {\n    return new cls(\n        config.learningRate, config.decay, config.momentum, config.epsilon,\n        config.centered);\n  }\n}\nSerializationMap.register(RMSPropOptimizer);\n"]}},"hash":"b8b57ed2346a83bfba32bc718ee31f0e","cacheData":{"env":{}}}