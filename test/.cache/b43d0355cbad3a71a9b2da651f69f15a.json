{"dependencies":[{"name":"/usr/local/google/home/nsthorat/deeplearnjs-clients/float16/tfjs-core/test/package.json","includedInParent":true,"mtime":1525096773813},{"name":"/usr/local/google/home/nsthorat/deeplearnjs-clients/float16/tfjs-core/test/.babelrc","includedInParent":true,"mtime":1525096773813},{"name":"/usr/local/google/home/nsthorat/deeplearnjs-clients/float16/tfjs-core/tsconfig.json","includedInParent":true,"mtime":1524062920943},{"name":"../doc","loc":{"line":9,"column":20}},{"name":"../environment","loc":{"line":10,"column":28}},{"name":"../util","loc":{"line":11,"column":19}},{"name":"./operation","loc":{"line":12,"column":26}}],"generated":{"js":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = require(\"../doc\");\nvar environment_1 = require(\"../environment\");\nvar util = require(\"../util\");\nvar operation_1 = require(\"./operation\");\nvar LRNOps = (function () {\n    function LRNOps() {\n    }\n    LRNOps.localResponseNormalization = function (x, radius, bias, alpha, beta) {\n        if (radius === void 0) { radius = 5; }\n        if (bias === void 0) { bias = 1; }\n        if (alpha === void 0) { alpha = 1; }\n        if (beta === void 0) { beta = 0.5; }\n        util.assertArgumentsAreTensors({ x: x }, 'localResponseNormalization');\n        util.assert(x.rank === 4 || x.rank === 3, \"Error in localResponseNormalization: x must be rank 3 or 4 but got\\n               rank \" + x.rank + \".\");\n        util.assert(util.isInt(radius), \"Error in localResponseNormalization3D: radius must be an integer\\n                     but got radius \" + radius + \".\");\n        var x4D = x;\n        var reshapedTo4D = false;\n        if (x.rank === 3) {\n            reshapedTo4D = true;\n            x4D = x.as4D(1, x.shape[0], x.shape[1], x.shape[2]);\n        }\n        var res = environment_1.ENV.engine.runKernel(function (backend) { return backend.localResponseNormalization4D(x4D, radius, bias, alpha, beta); }, { x4D: x4D });\n        if (reshapedTo4D) {\n            return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\n        }\n        else {\n            return res;\n        }\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Normalization' }),\n        operation_1.operation\n    ], LRNOps, \"localResponseNormalization\", null);\n    return LRNOps;\n}());\nexports.LRNOps = LRNOps;\n","map":{"version":3,"file":"lrn.js","sourceRoot":"","sources":["../src/ops/lrn.ts"],"names":[],"mappings":";;;;;;;;AAiBA,8BAA2B;AAC3B,8CAAmC;AAEnC,8BAAgC;AAChC,yCAAsC;AAEtC;IAAA;IA6CA,CAAC;IA5BQ,iCAA0B,GAAjC,UACI,CAAI,EAAE,MAAU,EAAE,IAAQ,EAAE,KAAS,EAAE,IAAU;QAA3C,uBAAA,EAAA,UAAU;QAAE,qBAAA,EAAA,QAAQ;QAAE,sBAAA,EAAA,SAAS;QAAE,qBAAA,EAAA,UAAU;QACnD,IAAI,CAAC,yBAAyB,CAAC,EAAC,CAAC,GAAA,EAAC,EAAE,4BAA4B,CAAC,CAAC;QAClE,IAAI,CAAC,MAAM,CACP,CAAC,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,EAC5B,6FACc,CAAC,CAAC,IAAI,MAAG,CAAC,CAAC;QAC7B,IAAI,CAAC,MAAM,CACP,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAClB,2GAC8B,MAAM,MAAG,CAAC,CAAC;QAE7C,IAAI,GAAG,GAAG,CAAa,CAAC;QACxB,IAAI,YAAY,GAAG,KAAK,CAAC;QACzB,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;YACjB,YAAY,GAAG,IAAI,CAAC;YACpB,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QACtD,CAAC;QACD,IAAM,GAAG,GAAG,iBAAG,CAAC,MAAM,CAAC,SAAS,CAC5B,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,4BAA4B,CAC3C,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,EADxB,CACwB,EACnC,EAAC,GAAG,KAAA,EAAC,CAAC,CAAC;QACX,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;YACjB,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAM,CAAC;QACjE,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,GAAQ,CAAC;QAClB,CAAC;IACH,CAAC;IA3BD;QAFC,SAAG,CAAC,EAAC,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,eAAe,EAAC,CAAC;QACzD,qBAAS;kDA4BT;IACH,aAAC;CAAA,AA7CD,IA6CC;AA7CY,wBAAM","sourcesContent":["/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {doc} from '../doc';\nimport {ENV} from '../environment';\nimport {Tensor3D, Tensor4D} from '../tensor';\nimport * as util from '../util';\nimport {operation} from './operation';\n\nexport class LRNOps {\n  /**\n   * Normalizes the activation of a local neighborhood across or within\n   * channels.\n   *\n   * @param x The input tensor. The 4-D input tensor is treated as a 3-D array\n   *     of 1D vectors (along the last dimension), and each vector is\n   *     normalized independently.\n   * @param radius The number of adjacent channels or spatial locations of the\n   *     1D normalization window. In Tensorflow this param is called\n   *     'depth_radius' because only 'acrossChannels' mode is supported.\n   * @param bias A constant bias term for the basis.\n   * @param alpha A scale factor, usually positive.\n   * @param beta An exponent.\n   */\n  @doc({heading: 'Operations', subheading: 'Normalization'})\n  @operation\n  static localResponseNormalization<T extends Tensor3D|Tensor4D>(\n      x: T, radius = 5, bias = 1, alpha = 1, beta = 0.5): T {\n    util.assertArgumentsAreTensors({x}, 'localResponseNormalization');\n    util.assert(\n        x.rank === 4 || x.rank === 3,\n        `Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${x.rank}.`);\n    util.assert(\n        util.isInt(radius),\n        `Error in localResponseNormalization3D: radius must be an integer\n                     but got radius ${radius}.`);\n\n    let x4D = x as Tensor4D;\n    let reshapedTo4D = false;\n    if (x.rank === 3) {\n      reshapedTo4D = true;\n      x4D = x.as4D(1, x.shape[0], x.shape[1], x.shape[2]);\n    }\n    const res = ENV.engine.runKernel(\n        backend => backend.localResponseNormalization4D(\n            x4D, radius, bias, alpha, beta),\n        {x4D});\n    if (reshapedTo4D) {\n      return res.as3D(res.shape[1], res.shape[2], res.shape[3]) as T;\n    } else {\n      return res as T;\n    }\n  }\n}\n"]}},"hash":"2cec136c85607a4657f1f902b7736688","cacheData":{"env":{}}}